/*! Dfam-js 14-12-2018 */
!function(a){"use strict";function b(){this.headers={},this.alignments=[]}b.prototype.parseStockholm=function(a){if(null!=a){for(var b=a.split(/\r\n|\n/),c=this,d=0;d<b.length;d++){var e;if(null!=(e=b[d].match(/^\s*$/)));else if(null!=(e=b[d].match(/^#\s+STOCKHOLM\s+([\.\d]+)/)))c.version=e[1];else if(null!=(e=b[d].match(/^#=GF\s+(\S+)\s+(\S+)/)))c.headers[e[1]]=e[2];else if(null!=(e=b[d].match(/^#=GC\s+RF\s+(\S+)/)))c.headers.RF=e[1];else if(null!=(e=b[d].match(/^\s*(\S+)\s+([ACGTUMRWSYKVHDBNacgtumrwsykvhdbn\.]+)\s*$/)))c.alignments.push({seqid:e[1],alignment:e[2]});else if(null!=(e=b[d].match(/^\/\/\s*$/)))break}if(null==c.headers.RF)throw"Stockholm Alignment: Missing RF line!  Not a consensus based multiple alignment";return c}},b.prototype.toAlignmentSummary=function(){var a=this,b=this.generateConsensusFromAlignment(),c=a.alignments,d=10,e={};e.qualityBlockLen=d,e.length=(b.match(/[^\.]/g)||[]).length,e.alignments=[];for(var f=0;f<c.length;f++){var g,h,i=/^(?:([^:\s]+):)?(?:([^:\s]+):)?(\S+):(\d+)-(\d+)$/,j=/^(\S+)_(\d+)_(\d+)(?:_(R))?$/,k=0,l=0,m="F";if(!/^ref:/.test(c[f].seqid)){null!=(g=c[f].seqid.match(i))?(h=g[3],g[4]<=g[5]?(k=g[4],l=g[5],m="F"):(k=g[5],l=g[4],m="R")):null!=(g=c[f].seqid.match(j))?(h=g[1],k=g[2],l=g[3],m="F","R"==g[4]&&(m="R")):(h=c[f].seqid,k=0,l=0,m="");var n=0,o=0,p=0,q=0,r=[],s=0,t=0,u=c[f].alignment.match(/^(\.*)[^\.]/),v=c[f].alignment.match(/.*[^\.](\.*)$/),w=0;u.length>0&&(w=u[1].length);var x;v.length>0&&(x=c[f].alignment.length-v[1].length-1);for(var y=0;y<=x;y++){var z=b[y];if("."!=z&&t++,!(y<w)){0==s&&(s=t);var A=c[f].alignment[y];if("."!=z){if(p+=1,"."==A?o+=1:(0==s&&(s=p),z!=A&&(q+=1)),p%d==0){var B=d-(q+o);n&&(B-=1),B<1&&(B=1),r.push(B),n=0,o=0,q=0}}else"."!=A&&(n+=1)}}if(q||o||n){var B=d-(q+o);n&&(B-=1),B<1&&(B=1),r.push(B)}var C=[];C.push(h),C.push(s),C.push(p),C.push(r),C.push(m),C.push("0.0"),C.push(k),C.push(l),e.alignments.push(C)}}return e.num_alignments=e.alignments.length,e},b.prototype.toConsensus=function(){for(var a=this,b=a.headers.RF,c=a.alignments,d=[],e=0;e<c.length;e++)for(var f=0;f<c[e].alignment.length;f++){var g=c[e].alignment[f];null==d[f]&&(d[f]={}),"."!=g&&(null==d[f][g]&&(d[f][g]=0),d[f][g]++)}for(var h="",f=0;f<b.length;f++)if("x"==b[f]){var i=0,j="";Object.keys(d[f]).forEach(function(a){d[f][a]>i&&(i=d[f][a],j=a)}),h+=j}return h},b.prototype.generateConsensusFromAlignment=function(a){for(var a=this,b=12,c=-5,d=2,e=[[9,0,-8,-15,-16,-17,-13,-3,-11,-4,-2,-7,-3,-6],[2,1,1,-15,-15,-16,-7,-6,-6,-7,-2,-7,-3,-6],[-4,3,10,-14,-14,-15,-2,-9,-2,-9,-2,-7,-3,-6],[-15,-14,-14,10,3,-4,-9,-2,-2,-9,-2,-7,-3,-6],[-16,-15,-15,1,1,2,-6,-7,-6,-7,-2,-7,-3,-6],[-17,-16,-15,-8,0,9,-3,-13,-11,-4,-2,-7,-3,-6],[-11,-6,-2,-11,-7,-3,-2,-11,-6,-7,-2,-7,-3,-6],[-3,-7,-11,-2,-6,-11,-11,-2,-6,-7,-2,-7,-3,-6],[-9,-5,-2,-2,-5,-9,-5,-5,-2,-9,-2,-7,-3,-6],[-4,-8,-11,-11,-8,-4,-8,-8,-11,-4,-2,-7,-3,-6],[-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-7,-3,-6],[-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-3,-6],[-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-6],[-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,3]],f=["A","R","G","C","Y","T","K","M","S","W","N","X","Z","."],g={},h=0;h<f.length;h++)g[f[h]]=h;for(var i=a.alignments,j=[],h=0;h<i.length;h++){var k=i[h].alignment.match(/^(\.*)[^\.]/),l=i[h].alignment.match(/.*[^\.](\.*)$/),m=0;k.length>0&&(m=k[1].length);var n;l.length>0&&(n=i[h].alignment.length-l[1].length-1);for(var o=m;o<=n;o++){var p=i[h].alignment[o];null==j[o]&&(j[o]={}),null==j[o][p]&&(j[o][p]=0),j[o][p]++}}for(var q=[],r="",h=0;h<i[0].alignment.length;h++){var s,t=-1e9;if(null!=j[h]){for(var o=0;o<f.length;o++){var u=f[o],v=0;Object.keys(j[h]).forEach(function(a){v+=j[h][a]*e[o][g[a]]}),v==t&&/[ACGTacgt]/.test(u)?s=u:v>t&&(s=u,t=v)}r+=s,q.push(t)}}for(var w,x=/([^\.])(\.*)/g;null!=(w=x.exec(r));){var y=x.lastIndex,z=y-w[2].length-1,A=w[1],B=r[y],C=0,D=0;if(void 0!==B){for(var h=0;h<i.length;h++){var E=i[h].alignment[z],F=i[h].alignment[y];if("."!=E&&"."!=F){var G=E+F;D+=e[g[A]][g[E]],D+=e[g[B]][g[F]],"CA"==G||"TG"==G?C+=b:"TA"==G?C+=c:"TC"==G||"TT"==G?C=C+d+e[g.G][g[F]]:"AA"==G||"GA"==G?C=C+d+e[g.C][g[E]]:(C+=e[g.C][g[E]],C+=e[g.G][g[F]])}}C>D&&(r=r.substring(0,z)+"C"+r.substring(z+1,r.length),r=r.substring(0,y)+"G"+r.substring(y+1,r.length))}}return r},b.prototype.toA2M=function(){var a=this;if(null!=a){var b,c={alignments:[]};if(null!=a.headers&&null!=a.headers.RF&&(b=a.headers.RF),null==b){b=this.generateConsensusFromAlignment().replace(/[^\.]/g,"X")}for(var d=a.alignments,e=-1,f=0;f<d.length;f++){var g=d[f].alignment;g=g.toUpperCase(),g=g.replace(/-/g,".");for(var h=(g.match(/[^\.]/g)||[]).length,i=0,j=-1,k=-1,l=0;l<g.length;l++){var m=g[l];"."==b[l]?"."!=m&&(g=g.substr(0,l)+m.toLowerCase()+g.substr(l+1)):(i++,"."==m?g=g.substr(0,l)+"-"+g.substr(l+1):(j<0&&(j=i),k=i))}g=g.replace(/\./g,"");var n=(g.match(/[^A-Z\-]/g)||[]).length;if(e>=0&&e!=n)throw"stockholmToA2M: Error converting to A2M format.  The number of match columns is not consistent ( was "+e+" and now "+n+" ).  Here is the offending line:"+d[f].alignment;c.alignments.push({seq_id:d[f].seqid,seq_start:d[f].start||1,seq_end:d[f].end||h,a2m_seq:g,strand:d[f].orient||"+",model_start:j,model_end:k})}return c}},"object"==typeof module&&module&&"object"==typeof module.exports?module.exports=b:(a.DfamSeedAlignment=b,"function"==typeof define&&define.amd&&define("dfamseedalignment",[],function(){return b}))}(this.window||"undefined"!=typeof global&&global||this);